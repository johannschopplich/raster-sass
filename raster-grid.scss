$raster-element: r-grid !default;
$grid-attribute: columns !default;
$cell-attribute: span !default;
$columns: 12 !default;
$default-cols: 4 !default;

$small-breakpoint: 600px;
$small-suffix: s;
$large-breakpoint: 1600px;
$large-suffix: l;

$include-debug: true !default;

@mixin make-cells($suffix: null) {
  $infix: if($suffix == null, "", "-#{$suffix}");

  @for $i from 1 through $columns {
    &[#{$grid-attribute}#{$infix}="#{$i}"] {
      --grid-tc: repeat(#{$i}, 1fr);
    }
  }

  > {
    // span=start...
    @for $i from 1 through $columns {
      [#{$cell-attribute}#{$infix}^="#{$i}"] {
        --grid-cs: #{$i};
      }
    }

    // span=...+width, span=...-end
    [#{$cell-attribute}#{$infix}$="+1"],
    [#{$cell-attribute}="1"] {
      --grid-ce: 1;
    }

    @for $i from 1 through $columns {
      [#{$cell-attribute}#{$infix}$="+#{$i}"],
      [#{$cell-attribute}#{$infix}$="-#{$i - 1}"],
      [#{$cell-attribute}#{$infix}="#{$i}"] {
        --grid-ce: #{$i};
      }
    }

    [#{$cell-attribute}#{$infix}$="-#{$columns}"] {
      --grid-ce: #{$columns + 1};
    }

    // Connect vars
    [#{$cell-attribute}#{$infix}] {
      grid-column-end: span var(--grid-ce);
    }

    [#{$cell-attribute}#{$infix}*="+"],
    [#{$cell-attribute}#{$infix}*="-"],
    [#{$cell-attribute}#{$infix}*=".."] {
      grid-column-start: var(--grid-cs);
    }

    [#{$cell-attribute}#{$infix}*="-"],
    [#{$cell-attribute}#{$infix}*=".."] {
      grid-column-end: var(--grid-ce);
    }

    [#{$cell-attribute}#{$infix}="row"] {
      grid-column: 1 / -1;
    }
  }
}

#{$raster-element} {
  --grid-tc: repeat(#{$default-cols}, 1fr); // Template columns
  --grid-cs: 1; // Column start
  --grid-ce: -1; // Column end
  display: grid;
  grid-template-columns: var(--grid-tc);

  // Cell or column
  > * {
    -webkit-appearance: none;
    appearance: none;
    display: block;
  }

  @include make-cells();

  @media (min-width: #{$small-breakpoint}) {
    @include make-cells($small-suffix);
  }

  @media (max-width: #{$large-breakpoint - 1}) {
    @include make-cells($large-suffix);
  }

  @if $include-debug {
    &.is-debug {
      > * {
        --color: hsla(7, 92%, 66%, 0.3);
        background-image: linear-gradient(to bottom, var(--color) 0%, var(--color) 100%);
      }
  
      > :nth-child(6n+2) { --color: hsla(227, 53%, 61%, 0.3); }
      > :nth-child(6n+3) { --color: hsla(40, 71%, 58%, 0.3); }
      > :nth-child(6n+4) { --color: hsla(137, 63%, 57%, 0.3); }
      > :nth-child(6n+5) { --color: hsla(299, 62%, 63%, 0.3); }
      > :nth-child(6n+6) { --color: hsla(184, 57%, 60%, 0.3); }
      > :nth-child(6n+7) { --color: hsla(7, 92%, 66%, 0.3); }
    }
  }
}
